<?php

/**
 * @file
 * Set up the Demo Framework.
 */

/**
 * Implements hook_install().
 */
function df_admin_install() {
  // Disable new revision creation for page nodes.
  $config = \Drupal::configFactory()->getEditable('node.type.page');
  $data = $config->getRawData();
  $data['new_revision'] = FALSE;
  $config->setData($data);
  $config->save();

  // Customize core.entity_view_display.node.page.default.
  $config = \Drupal::configFactory()->getEditable('core.entity_view_display.node.page.default');
  $data = $config->getRawData();
  $data['third_party_settings'] = [
    'panelizer' => [
      'enable' => TRUE,
      'custom' => TRUE,
      'displays' => [
        'default' => [
          'blocks' => [
            '197a21c8-479d-4d6b-9a05-5eaaf82b0e0e' => [
              'id' => 'entity_field:node:body',
              'label' => 'Body',
              'provider' => 'ctools_block',
              'label_display' => '0',
              'formatter' => [
                'label' => 'hidden',
                'type' => 'text_default',
                'settings' => [],
                'third_party_settings' => [],
                'weight' => 0,
              ],
              'context_mapping' => [
                'entity' => '@panelizer.entity_context:entity',
              ],
              'region' => 'middle',
              'weight' => 1,
              'uuid' => '197a21c8-479d-4d6b-9a05-5eaaf82b0e0e',
            ],
          ],
          'id' => 'panels_variant',
          'uuid' => 'df0d1b37-8cd5-46d3-b900-f18df4825325',
          'label' => '',
          'weight' => 0,
          'layout' => 'onecol',
          'layout_settings' => [],
          'page_title' => '[node:title]',
          'storage_type' => 'panelizer_default',
          'storage_id' => 'node:page:full:default',
          'builder' => 'ipe',
        ],
      ],
    ],
  ];
  $data['hidden'] = [
    'langcode' => TRUE,
    'panelizer' => TRUE,
  ];
  $config->setData($data);
  $config->save();

  // Set front page to "welcome".
  \Drupal::configFactory()->getEditable('system.site')->set('page.front', '/welcome')->save(TRUE);

  // Create the rebuild.dat file to trigger a menu router rebuild on first use.
  $rebuild_path = 'public:///rebuild.dat';
  if (file_exists($rebuild_path)) {
    // Short circuit if the .rebuild file already exists.
    return TRUE;
  }

  // Write the rebuild file.
  if (file_exists('public://') && is_writable('public://') && file_put_contents($rebuild_path, 'typhonius')) {
    return drupal_chmod($rebuild_path, 0644);
  }
  else {
    $variables = array('%directory' => 'public://');
    \Drupal::logger('df_admin')->error("Couldn't write rebuild.dat file. Please either manually create a rebuild.dat file %directory directory or clear the cache from the website.");
    return FALSE;
  }

}