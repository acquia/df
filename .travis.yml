sudo: required
dist: trusty
language: php

cache:
  bundler: true
  apt: true
  directories:
    - "$HOME/.composer/cache"
    - "$HOME/.drush/cache"
    - "$HOME/.npm"

php:
  - 7.2.4
env:
  matrix:
    - SCENARIO=df
    - SCENARIO=dfs_dev
    - SCENARIO=dfs_tec

addons:
  apt:
    packages:
    # Dependencies for Chrome.
    - libappindicator1
    - fonts-liberation

before_install:
  # Disable xdebug.
  - phpenv config-rm xdebug.ini

  # Update composer.
  - composer self-update
  - composer --version

  # Initialize xvfb (see https://docs.travis-ci.com/user/gui-and-headless-browsers)
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - sleep 3

  # Download Chrome Driver
  - LATEST_CHROMEDRIVER=$(wget -q -O - http://chromedriver.storage.googleapis.com/LATEST_RELEASE)
  - wget http://chromedriver.storage.googleapis.com/$LATEST_CHROMEDRIVER/chromedriver_linux64.zip
  - unzip chromedriver_linux64.zip
  - chmod +x chromedriver
  - mkdir -p $HOME/.composer/vendor/bin
  - mv -f chromedriver $HOME/.composer/vendor/bin/
  - rm chromedriver_linux64.zip

  # Update Chrome.
  - export CHROME_BIN=/usr/bin/google-chrome
  - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  - sudo dpkg -i google-chrome-stable_current_amd64.deb
  - rm google-chrome-stable_current_amd64.deb
  - google-chrome --version

install:
  # Add Composer's local bin directory to the PATH so that we will be running
  # our installed versions of Drush, PHPCS, Behat, PhantomJS, etc.
  - export PATH="$HOME/.composer/vendor/bin:$TRAVIS_BUILD_DIR/vendor/bin:$PATH"

  # Composer install should fail on bad patches.
  - export COMPOSER_EXIT_ON_PATCH_FAILURE=1

  # Create the MySQL database and add a user for testing.
  - mysql -u root -e "CREATE DATABASE drupal; CREATE USER 'df'@'localhost' IDENTIFIED BY 'df'; GRANT ALL ON drupal.* TO 'df'@'localhost';"

  # Install the required PECL extensions.
  # Retrieve the extension from pecl.php.net manually in order to avoid timeouts
  # and issues retrieving release information from PECL.
  # 'yes' is used to acknowledge all prompts.
  - wget http://pecl.php.net/get/yaml-2.0.2.tgz
  - wget http://pecl.php.net/get/mcrypt-1.0.1.tgz
  - yes '' | pecl install yaml-2.0.2.tgz
  - yes '' | pecl install mcrypt-1.0.1.tgz
  # Tweak PHP configuration.
  - echo 'memory_limit = -1' >> drupal.php.ini;
  - echo 'max_execution_time = 120' >> drupal.php.ini;
  - echo 'sendmail_path = /bin/true' >> drupal.php.ini;
  - phpenv config-add drupal.php.ini
  - phpenv rehash

  # Build the DF code base.
  - composer install

  # Install Demo Framework cleanly so that settings.php will be created properly.
  - lightning install 'mysql\://df:df@127.0.0.1/drupal' $SCENARIO 'http://127.0.0.1:8080' --no-dev
  - lightning configure:behat 'http://127.0.0.1:8080'

before_script:
  - drush runserver --default-server=builtin 8080 &>/dev/null &
  - jdk_switcher use oraclejdk8
  - sleep 5
  - selenium-server-standalone -port 4444 -log selenium.log &

script:
  - cd docroot
  - composer validate ../composer.json --no-check-all --ansi --no-interaction
  - cd ..
  - if [[ "$SCENARIO" != df ]]; then behat --config .behat.yml --stop-on-failure --tags=df; fi
  - if [[ "$SCENARIO" != df ]]; then behat --config .behat.yml --stop-on-failure --tags=$SCENARIO; fi

after_failure:
  - cd docroot
  - drush watchdog:show --count=100 --severity=Error --extended

matrix:
  fast_finish: true
