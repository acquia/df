diff --git a/src/Controller/CohesionEndpointController.php b/src/Controller/CohesionEndpointController.php
index fd079eb633..be5c46c87b 100644
--- a/src/Controller/CohesionEndpointController.php
+++ b/src/Controller/CohesionEndpointController.php
@@ -841,7 +841,7 @@ class CohesionEndpointController extends ControllerBase {
   public function getEntityPreviewPath(Request $request) {
     $reference = $request->attributes->get('reference') ?: NULL;
 
-    if ($image = \Drupal::service('cohesion_image_browser.update_manager')->decodeToken($reference)) {
+    if ($image = \Drupal::service('cohesion_image_browser.update_manager')->getThumbnail($reference)) {
       if ($image['path']) {
         $image['path'] = $this->fileUrlGenerator->generateAbsoluteString($image['path']);
       }
diff --git a/src/ImageBrowserUpdateManager.php b/src/ImageBrowserUpdateManager.php
index 65b820afb4..7d121434fb 100644
--- a/src/ImageBrowserUpdateManager.php
+++ b/src/ImageBrowserUpdateManager.php
@@ -182,6 +182,7 @@ class ImageBrowserUpdateManager {
             if ($entity instanceof FileInterface) {
               return [
                 'path' => $entity->getFileUri(),
+                'entity' => $entity,
                 'label' => $entity->label(),
               ];
             }
@@ -189,7 +190,6 @@ class ImageBrowserUpdateManager {
 
           // This is a media entity reference (Entity Browser).
           case 'media':
-
             // Checking for Acquia DAM assets and using original embeds.
             if ($entity instanceof MediaInterface && strpos($entity->getSource()->getPluginId(), 'acquia_dam_asset') === 0) {
               ['asset_id' => $asset_id, 'version_id' => $version_id] = $entity->getSource()->getSourceFieldValue($entity);
@@ -197,14 +197,15 @@ class ImageBrowserUpdateManager {
 
               return [
                 'path' => $uri,
+                'entity' => $entity,
                 'label' => $entity->label(),
               ];
-
             }
 
             if ($image_uri = $entity->getSource()->getMetadata($entity, 'thumbnail_uri')) {
               return [
                 'path' => $image_uri,
+                'entity' => $entity,
                 'label' => $entity->label(),
               ];
             }
@@ -215,6 +216,7 @@ class ImageBrowserUpdateManager {
           default:
             return [
               'path' => '',
+              'entity' => '',
               'label' => $entity->label(),
             ];
         }
@@ -224,4 +226,36 @@ class ImageBrowserUpdateManager {
     return FALSE;
   }
 
+  /**
+   * @param $reference
+   * @return array
+   */
+  public function getThumbnail($reference) {
+    // Decode the media reference token.
+    $ref = $this->decodeToken($reference);
+    $entity = $ref['entity'];
+    // Make sure there is a path & entity.
+    if ($ref['path'] && $entity) {
+      $entity_type = $entity->getEntityTypeId();
+
+      if ($entity_type == 'file') {
+        return [
+          'path' => $entity->getFileUri(),
+          'label' => $entity->label(),
+        ];
+      }
+      elseif ($entity_type == 'media') {
+        return [
+          'path' => $entity->getSource()->getMetadata($entity, 'thumbnail_uri'),
+          'label' => $entity->label(),
+        ];
+      }
+    }
+
+    return [
+      'path' => '',
+      'label' => $entity->label(),
+    ];
+  }
+
 }
